{"version":3,"sources":["skylark-langx-hoster.js"],"names":["define","skylark","hoster","isBrowser","isNode","global","this","browser","node","process","versions","v8","window","self","_document","Object","defineProperty","w","require","document","undefined","CustomEvent","type","props","matched","ua","toLowerCase","match","exec","indexOf","version","uaMatch","navigator","userAgent","chrome","webkit","safari","attach","appleIphone","appleIpod","appleTablet","appleUniversal","androidPhone","androidTablet","amazonPhone","amazonTablet","windowsPhone","windowsTablet","otherBlackBerry","otherBlackBerry10","otherOpera","otherChrome","otherFirefox","isAppleTabletOnIos13","platform","maxTouchPoints","MSStream","isMobile","param","nav","tmp","split","regex","test","createMatch","result","apple","phone","ipod","tablet","universal","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","any","check","main"],"mappings":"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","file":"../skylark-langx-hoster.js","sourcesContent":["define('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.global.CustomEvent === undefined) {\r\n\t\thoster.global.CustomEvent = function(type,props) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.props = props;\r\n\t\t};\r\n\t}\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t\t//IE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\r\n\t\t\t//Edge = !!navigator.userAgent.match(/Edge/i),\r\n\t\t\t//FireFox = !!navigator.userAgent.match(/firefox/i),\r\n\t\t\t//Safari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\r\n\t\t\t//IOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/isMobile',[\r\n    \"./hoster\"\r\n],function(hoster){\r\n\r\n    var appleIphone = /iPhone/i;\r\n    var appleIpod = /iPod/i;\r\n    var appleTablet = /iPad/i;\r\n    var appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\r\n    var androidPhone = /\\bAndroid(?:.+)Mobile\\b/i;\r\n    var androidTablet = /Android/i;\r\n    var amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i;\r\n    var amazonTablet = /Silk/i;\r\n    var windowsPhone = /Windows Phone/i;\r\n    var windowsTablet = /\\bWindows(?:.+)ARM\\b/i;\r\n    var otherBlackBerry = /BlackBerry/i;\r\n    var otherBlackBerry10 = /BB10/i;\r\n    var otherOpera = /Opera Mini/i;\r\n    var otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\r\n    var otherFirefox = /Mobile(?:.+)Firefox\\b/i;\r\n    var isAppleTabletOnIos13 = function (navigator) {\r\n        return (typeof navigator !== 'undefined' &&\r\n            navigator.platform === 'MacIntel' &&\r\n            typeof navigator.maxTouchPoints === 'number' &&\r\n            navigator.maxTouchPoints > 1 &&\r\n            typeof MSStream === 'undefined');\r\n    };\r\n    function createMatch(userAgent) {\r\n        return function (regex) { return regex.test(userAgent); };\r\n    }\r\n    \r\n    function check(param) {\r\n        var nav = {\r\n            userAgent: '',\r\n            platform: '',\r\n            maxTouchPoints: 0\r\n        };\r\n        if (!param && typeof navigator !== 'undefined') {\r\n            nav = {\r\n                userAgent: navigator.userAgent,\r\n                platform: navigator.platform,\r\n                maxTouchPoints: navigator.maxTouchPoints || 0\r\n            };\r\n        }\r\n        else if (typeof param === 'string') {\r\n            nav.userAgent = param;\r\n        }\r\n        else if (param && param.userAgent) {\r\n            nav = {\r\n                userAgent: param.userAgent,\r\n                platform: param.platform,\r\n                maxTouchPoints: param.maxTouchPoints || 0\r\n            };\r\n        }\r\n        var userAgent = nav.userAgent;\r\n        var tmp = userAgent.split('[FBAN');\r\n        if (typeof tmp[1] !== 'undefined') {\r\n            userAgent = tmp[0];\r\n        }\r\n        tmp = userAgent.split('Twitter');\r\n        if (typeof tmp[1] !== 'undefined') {\r\n            userAgent = tmp[0];\r\n        }\r\n        var match = createMatch(userAgent);\r\n        var result = {\r\n            apple: {\r\n                phone: match(appleIphone) && !match(windowsPhone),\r\n                ipod: match(appleIpod),\r\n                tablet: !match(appleIphone) &&\r\n                    (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\r\n                    !match(windowsPhone),\r\n                universal: match(appleUniversal),\r\n                device: (match(appleIphone) ||\r\n                    match(appleIpod) ||\r\n                    match(appleTablet) ||\r\n                    match(appleUniversal) ||\r\n                    isAppleTabletOnIos13(nav)) &&\r\n                    !match(windowsPhone)\r\n            },\r\n            amazon: {\r\n                phone: match(amazonPhone),\r\n                tablet: !match(amazonPhone) && match(amazonTablet),\r\n                device: match(amazonPhone) || match(amazonTablet)\r\n            },\r\n            android: {\r\n                phone: (!match(windowsPhone) && match(amazonPhone)) ||\r\n                    (!match(windowsPhone) && match(androidPhone)),\r\n                tablet: !match(windowsPhone) &&\r\n                    !match(amazonPhone) &&\r\n                    !match(androidPhone) &&\r\n                    (match(amazonTablet) || match(androidTablet)),\r\n                device: (!match(windowsPhone) &&\r\n                    (match(amazonPhone) ||\r\n                        match(amazonTablet) ||\r\n                        match(androidPhone) ||\r\n                        match(androidTablet))) ||\r\n                    match(/\\bokhttp\\b/i)\r\n            },\r\n            windows: {\r\n                phone: match(windowsPhone),\r\n                tablet: match(windowsTablet),\r\n                device: match(windowsPhone) || match(windowsTablet)\r\n            },\r\n            other: {\r\n                blackberry: match(otherBlackBerry),\r\n                blackberry10: match(otherBlackBerry10),\r\n                opera: match(otherOpera),\r\n                firefox: match(otherFirefox),\r\n                chrome: match(otherChrome),\r\n                device: match(otherBlackBerry) ||\r\n                    match(otherBlackBerry10) ||\r\n                    match(otherOpera) ||\r\n                    match(otherFirefox) ||\r\n                    match(otherChrome)\r\n            },\r\n            any: false,\r\n            phone: false,\r\n            tablet: false\r\n        };\r\n        result.any =\r\n            result.apple.device ||\r\n                result.android.device ||\r\n                result.windows.device ||\r\n                result.other.device;\r\n        result.phone =\r\n            result.apple.phone || result.android.phone || result.windows.phone;\r\n        result.tablet =\r\n            result.apple.tablet || result.android.tablet || result.windows.tablet;\r\n        return result;\r\n    }\r\n\r\n    return hoster.isMobile = check();\r\n});\r\n\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\",\r\n\t\"./isMobile\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\n"]}